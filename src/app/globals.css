@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@utility container {
  margin-inline: auto;
  padding-inline: 1.5rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

@theme {
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

/* *=========== Claude.ai Inspired Theme =========== */
@layer base {
  :root {
    --background: 48 2% 98%;
    --foreground: 60 5% 8%; /* before => --foreground: 240 10% 3.9%; */
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    /* --primary: 240 4% 46%; */
    --primary: 0 0% 9%;
    /* --primary-foreground: 0 0% 100%; */
    --primary-foreground: 0 0% 98%;
    --secondary: 240 5% 96%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 5% 96%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 5% 96%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5% 90%;
    --input: 240 5% 90%;
    --ring: 240 5% 65%;
    --radius: 0.75rem;
  }

  .dark {
    --background: 60 5% 15%;
    --foreground: 48 2% 98%; /* before => --foreground: 240 5% 95%; */
    --card: 240 5% 12%;
    --card-foreground: 240 5% 95%;
    --popover: 240 6% 10%;
    --popover-foreground: 240 5% 95%;
    /* --primary: 240 5% 63%; */
    --primary: 0 0% 98%;
    /* --primary-foreground: 240 5% 98%; */
    --primary-foreground: 0 0% 9%;
    --secondary: 240 4% 16%;
    --secondary-foreground: 240 5% 98%;
    --muted: 240 4% 16%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 4% 16%;
    --accent-foreground: 240 5% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 85.7% 97.3%;
    --border: 240 4% 20%;
    --input: 240 4% 20%;
    --ring: 240 5% 45%;
  }
}


@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
}

/* Custom animations for micro-interactions */
@keyframes float {
  0%,
  100% {
    transform: translateY(0px) scale(1);
    opacity: 0.7;
  }
  25% {
    transform: translateY(-8px) scale(1.1);
    opacity: 1;
  }
  50% {
    transform: translateY(-4px) scale(0.9);
    opacity: 0.8;
  }
  75% {
    transform: translateY(-12px) scale(1.05);
    opacity: 0.9;
  }
}

@keyframes gradient-shimmer {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.gradient-shimmer {
  background-size: 200% 200%;
  animation: gradient-shimmer 3s ease infinite;
}

/* User Companion System Styles */
.companion-toast {
  border-left: 3px solid hsl(var(--primary));
  background: hsl(var(--background) / 0.95);
  backdrop-filter: blur(8px);
}

.companion-progress {
  position: relative;
  overflow: hidden;
}

.companion-progress::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  animation: progress-shimmer 2s infinite;
}

@keyframes progress-shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(200%);
  }
}

/* Service card hover effects */
.service-card-glow {
  position: relative;
  overflow: hidden;
}

.service-card-glow::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(
    600px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    hsl(var(--primary) / 0.1),
    transparent 40%
  );
  opacity: 0;
  transition: opacity 300ms;
  pointer-events: none;
}

.service-card-glow:hover::before {
  opacity: 1;
}

/* Reduce motion for accessibility */
@media (prefers-reduced-motion: reduce) {
  .companion-toast,
  .animate-float,
  .gradient-shimmer,
  .service-card-glow::before {
    animation: none;
  }

  .companion-progress::after {
    display: none;
  }
}
